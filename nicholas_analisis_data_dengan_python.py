# -*- coding: utf-8 -*-
"""Nicholas Analisis Data dengan Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h-eH5Rt8YKU1bhaOy0f2EAPwd8lqi2qh

# Proyek Analisis Data: Bike Sharing Dataset
- **Nama:** Nicholas
- **Email:** nicholas13245768@gmail.com
- **ID Dicoding:** nicholas_m002d4ky2609_DLG7

## Menentukan Pertanyaan Bisnis

- Bagaimana performa rental sepeda  terkini?
- Bulan berapakah yang memiliki jumlah rental sepeda terbesar?
- Bagaimana tren rental sepeda customer berdasarkan cuaca?
- Bagaimana tren rental sepeda customer berdasarkan suhu?
- Bagaimana tren rental sepeda customer berdasarkan musim?
- Performa rental sepeda berdasarkan hari libur
- Jumlah penyewaan rental sepeda berdasarkan jam
- Performa rental sepeda seiring berjalannya satu minggu operasi

## Import Semua Packages/Library yang Digunakan
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""## Data Wrangling

### Gathering Data
"""

days_df = pd.read_csv('/content/day.csv')
days_df.head()

hours_df = pd.read_csv('/content/hour.csv')
hours_df.head()

"""### Assessing Data

**Type Data**
"""

days_df.info()
print("\n")
hours_df.info()

"""Dapat dilihat bahwa dteday memiliki type object yang seharusnya bersifat datetime yang akan diperbaiki pada bagian Cleaning Data

**Null Checker**
"""

days_df.isna().sum()

hours_df.isna().sum()

"""Tidak ada data yang bersifat null

**Duplicated data**
"""

print("Jumlah duplikasi: ", days_df.duplicated().sum())
print("Jumlah duplikasi: ", hours_df.duplicated().sum())

"""Tidak ada data yang terduplikasi

**Data Analysis**
"""

days_df.describe()

hours_df.describe()

"""Tidak ada masalah pada statistik data

| Dataset | Type Data | Null Data | Duplicated Data | Data statistics |
| --- | --- | --- | --- | --- |
| days_df | Date yang memiliki format string | - | - | - |
| hours_df | Date yang memiliki format string | - | - | - |

### Cleaning Data
"""

days_df['dteday'] = pd.to_datetime(days_df['dteday'])
hours_df['dteday'] = pd.to_datetime(hours_df['dteday'])

days_df.info()

"""## Exploratory Data Analysis (EDA)"""

df = days_df

"""### Explore

Mengubah season menjadi deskriptif agar lebih mudah dipahami
"""

weather_labels = {
    1: "Clear",
    2: "Mist",
    3: "Light Rain or Snow",
    4: "Heavy Rain or Snow",
}

df['weathersit'] = df['weathersit'].map(weather_labels)
df.sample(10)

df.groupby(by="weathersit").agg({
    "cnt": "mean"
}).sort_values(by = "cnt",ascending = False)

"""Beberapa insight yang dapat ditemui adalah tidak adanya rental sepeda saat terjadi badai dan jumlah rental sepeda cenderung lebih tinggi dengan baiknya cuaca"""

df.groupby(by="mnth").agg({
    "cnt": "mean"
}).sort_values(by = "cnt",ascending = False)

"""Dapat terlihat bahwa pertengahan tahun cenderung memiliki jumlah rental sepeda yang lebih tinggi"""

season_labels = {
    1: "Winter",
    2: "Spring",
    3: "Summer",
    4: "Fall",
}

df['season'] = df['season'].map(season_labels)
df.sample(10)

df.groupby(by="season").agg({
    "cnt": "mean"
}).sort_values(by = "cnt",ascending = False)

"""Jumlah rental sepeda pada musim gugur memiliki jumlah tertinggi dengan jumlah yang tidak beda jauh dengan musim panas dan musim salju. Musim semi memiliki jumlah rental sepeda terrendah dengan 2604 rental."""

holiday_labels = {
    0: "Holiday",
    1: "Workday",
}

df['workingday'] = df['workingday'].map(holiday_labels)
df.sample(10)
df = df.drop(['holiday'],axis=1)
df.rename(columns = {'workingday':'holiday'}, inplace = True)

df.sample(10)

df.groupby(by="holiday").agg({
    "cnt": "mean"
}).sort_values(by = "cnt",ascending = False)

"""Dapat terlihat bahwa workday memiliki jumlah rental sepeda yang lebih banyak daripada holiday."""

day_labels = {
    0: 'Sunday',
    1: "Monday",
    2: "Tuesday",
    3: "Wednesday",
    4: "Thursday",
    5: 'Friday',
    6: 'Saturday',
}

df['weekday'] = df['weekday'].map(day_labels)
df.sample(10)

df.groupby(by="weekday").agg({
    "cnt": "mean"
}).sort_values(by = "cnt",ascending = False)

hours_df.groupby(by="hr").agg({
    "cnt": "mean"
}).sort_values(by = "cnt",ascending = False)

"""Tidak ada perbedaan signifikan antara hari berdasarkan jumlah rental sepeda. Akan tetapi terdapat perbedaan yang cukup besar pada jam dimana sore dan siang memiliki jumlah rental sepeda tertinggi"""

correlation_matrix = days_df.corr()
correlation_matrix

"""## Visualization & Explanatory Analysis

- Bagaimana performa rental sepeda terkini?
- Bulan berapakah yang memiliki jumlah rental sepeda terbesar?
- Bagaimana tren rental sepeda customer berdasarkan cuaca?
- Bagaimana tren rental sepeda customer berdasarkan suhu?
- Bagaimana tren rental sepeda customer berdasarkan musim?
- Performa rental sepeda berdasarkan hari libur
- Jumlah penyewaan rental sepeda berdasarkan jam
- Performa rental sepeda seiring berjalannya satu minggu operasi

### Pertanyaan 1:
"""

df_date = df[["cnt","dteday"]]
# Set the 'datetime_column' as the index of the DataFrame if it's not already
df_date.set_index('dteday', inplace=True)

# Resample the datetime series on 15-day intervals and apply any desired aggregation function (e.g., count)
result = df_date.resample('5D').mean()

plt.figure(figsize=(10, 5))
plt.plot(result.index, result["cnt"])
plt.title("Number of Rental for the year 2011-2012", loc="center", fontsize=20)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)
plt.show()

"""### Pertanyaan 2:"""

plt.figure(figsize=(10, 5))
plt.bar(df.groupby('mnth')['cnt'].mean().index, df.groupby('mnth')['cnt'].mean().values)
plt.title("Number of Rental per month)", loc="center", fontsize=20)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)
plt.show()

"""# Pertanyaan 3"""

plt.figure(figsize=(10, 5))
stats = df.groupby('weathersit')['cnt'].mean()
plt.bar(stats.index, stats.values)
plt.title("Number of Rental for each weather)", loc="center", fontsize=20)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)
plt.show()

"""#Pertanyaan 4"""

df_temp = df[["cnt","temp"]]
df_temp = df_temp.assign(temp_rounded = lambda x: (round(((x['temp'])*47)-8)*20)/20)
df_temp.describe()

plt.figure(figsize=(10, 5))
stats = df_temp.groupby('temp_rounded')['cnt'].mean()
plt.plot(stats.index, stats.values)
plt.title("Number of Rental for temperature", loc="center", fontsize=20)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)
plt.show()

"""# Pertanyaan 5"""

plt.figure(figsize=(10, 5))
stats = df.groupby('season')['cnt'].mean()
plt.bar(stats.index, stats.values)
plt.title("Number of Rental for each season", loc="center", fontsize=20)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)
plt.show()

"""# Pertanyaan 6"""

plt.figure(figsize=(10, 5))
stats = df.groupby('holiday')['cnt'].mean()
plt.bar(stats.index, stats.values)
plt.title("Number of Rental for holiday", loc="center", fontsize=20)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)
plt.show()

"""# Pertanyaan 7"""

plt.figure(figsize=(10, 5))
stats = hours_df.groupby('hr')['cnt'].mean()
plt.bar(stats.index, stats.values)
plt.title("Number of Rental for each hr", loc="center", fontsize=20)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)
plt.show()

"""# Pertanyaan 8"""

plt.figure(figsize=(10, 5))
stats = df.groupby('weekday')['cnt'].mean()
plt.bar(stats.index, stats.values)
plt.title("Number of Rental for each weekday", loc="center", fontsize=20)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)
plt.show()

"""## Conclusion

- Conclusion pertanyaan 1: Jumlah rental sepeda memiliki bentuk yang menyerupai gunung dengan puncak yang ada pada pertengahan tahun.
  - **Iklim yang mendukung pada pertengahan tahun**: Cuaca pada pertengahan tahun memiliki suhu yang mendukung yaitu pada saat musim semi, panas dan gugur yang tidak terlalu dingin setelah musim dingin
  - **Kesibukan**: Terdapat lebih banyak kesibukan saat musim lainnya dibandingkan musim dingin sehingga diperlukan sepeda sebagai transportasi yang lebih cepat.
- Conclusion pertanyaan 2:  Sesuai dengan pertanyaan 1, bulan 12, 1 dan 2 memiliki rental yang rendah dengan jumlah yang meningkat semakin jauh dari bulan-bulan tersebut dan mengecil semakin mendekat bulan 12.
  - **Cuaca yang lebih hangat**: Cuaca yang lebih mendukung pada musim lain dibandingkan musim dingin mendorong meningkatnya rental sepeda.
  - **Kesibukan**: Terdapat lebih banyak kesibukan saat musim lainnya dibandingkan musim dingin sehingga diperlukan sepeda sebagai transportasi yang lebih cepat.
- Conclusion pertanyaan 3:  Cuaca yang lebih baik memiliki jumlah rental sepeda yang lebih tinggi
  - **Cuaca yang mendukung**: Cuaca dan suhu yang lebih mendukung membuat orang orang lebih antusias untuk beraktivitas.
  - **Toko rental yang tutup**: Cuaca buruk memungkinkan toko rental untuk tutup dan tidak menerima pelanggan.
- Conclusion pertanyaan 4: Suhu yang lebih tinggi terutama pada rentang 20-30 memiliki tingkat rental yang lebih tinggi.
  - **Cuaca yang mendukung**: Cuaca dan suhu yang lebih mendukung membuat orang orang lebih antusias untuk beraktivitas.
- Conclusion pertanyaan 5: Musim dingin memiliki rental yang paling rendah dibandingkan dengan musim lainnya
  - **Suhu Dingin** : Suhu yang dingin mendorong orang-orang untuk tetap di rumah untuk mendapatkan kehangatan.
  - **Toko rental yang tutup**: Musim yang tidak bersahabat memungkinkan toko rental untuk tutup dan tidak menerima pelanggan.
- Conclusion pertanyaan 6:  Rental pada holiday dan workday memiliki perbedaan yang tidak signifikan
- Conclusion pertanyaan 7: Rental sepeda memiliki jumlah yang tinggi pada jam 8 pagi dan siang namun memiliki jumlah rental yang sepi saat subuh.
  - **Aktivitas**: Konklusi ini bersesuaian dengan jam waktu aktivitas orang-orang pada umumnya.
- Conclusion pertanyaan 8: Rental sepeda tidak memiliki perbedaan yang signifikan berdasarkan hari
"""

df.to_csv("data.csv")